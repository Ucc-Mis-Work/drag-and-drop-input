<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>File Upload</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
    <div id="file-upload-container" class="flex flex-col items-center justify-center w-full h-40 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100 transition duration-300 relative">
        <input 
            type="file" 
            id="file-input" 
            accept=".jpg,.jpeg,.png,.pdf" 
            class="hidden"
        >
        
        <div id="upload-content" class="flex flex-col items-center justify-center text-center">
            <svg class="w-10 h-10 mb-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
            </svg>
            
            <p id="upload-text" class="mb-2 text-sm text-gray-500">
                <span class="font-semibold">Click to upload</span> or drag and drop
            </p>
            <p class="text-xs text-gray-500">
                PNG, JPG, PDF (max 5MB)
            </p>
        </div>

        <img id="file-preview" class="absolute inset-0 w-full h-full object-cover rounded-lg hidden" src="#" alt="File preview">
        
        <p id="file-name" class="absolute bottom-0 left-0 right-0 text-center text-sm text-gray-600 pb-1 truncate"></p>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const container = document.getElementById('file-upload-container');
            const fileInput = document.getElementById('file-input');
            const uploadContent = document.getElementById('upload-content');
            const uploadText = document.getElementById('upload-text');
            const fileName = document.getElementById('file-name');
            const filePreview = document.getElementById('file-preview');

            // Click to upload
            container.addEventListener('click', function(e) {
                if (e.target !== fileInput) {
                    fileInput.click();
                }
            });

            // Drag and drop events
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                container.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                container.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                container.addEventListener(eventName, unhighlight, false);
            });

            function highlight() {
                container.classList.add('bg-gray-200', 'border-blue-500');
                container.classList.remove('bg-gray-50');
            }

            function unhighlight() {
                container.classList.remove('bg-gray-200', 'border-blue-500');
                container.classList.add('bg-gray-50');
            }

            // Handle file selection
            fileInput.addEventListener('change', handleFiles, false);
            container.addEventListener('drop', dropHandler, false);

            function dropHandler(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                handleFiles(files);
            }

            function handleFiles(files) {
                // If called from drop event, files might be a FileList
                // If called from change event, files is the event object
                files = files.target ? files.target.files : files;

                if (files.length === 0) return;

                const file = files[0];
                
                // Validate file type and size
                const validTypes = ['image/jpeg', 'image/png', 'application/pdf'];
                const maxSize = 5 * 1024 * 1024; // 5MB

                if (!validTypes.includes(file.type)) {
                    alert('Invalid file type. Please upload JPG, PNG, or PDF.');
                    fileInput.value = ''; // Clear the input
                    return;
                }

                if (file.size > maxSize) {
                    alert('File is too large. Maximum size is 5MB.');
                    fileInput.value = ''; // Clear the input
                    return;
                }

                // Update file name display
                fileName.textContent = file.name;
                fileName.classList.remove('hidden');

                // Preview for image files
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        filePreview.src = e.target.result;
                        filePreview.classList.remove('hidden');
                        uploadContent.classList.add('hidden');
                    }
                    reader.readAsDataURL(file);
                } else {
                    // Hide image preview for PDFs
                    filePreview.classList.add('hidden');
                    uploadContent.classList.remove('hidden');
                }
            }
        });
    </script>
</body>
</html>
